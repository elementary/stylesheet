button {
    transition: background duration("in-place") $easing;

    &.raised {
        @extend %outset-background;

        background-clip: padding-box;
        background-color: bg-color(0);
        border: 1px solid $border-color;
        box-shadow:
            outset-highlight("full"),
            outset-shadow(2);

        headerbar & {
            border-radius: rem(3px);
        }

        &.keyboard-activating,
        &:active,
        &:checked {
            background: rgba(black, 0.05);
            box-shadow: inset-shadow();

            @if $color-scheme == "dark" {
                background: rgba(black, 0.15);
            }
        }

        &:disabled {
            background: rgba(black, 0.03);
            box-shadow:
                outset-highlight("full"),
                outset-shadow(1);
        }

        &:focus {
            @if $color-scheme == "light" {
                border-color: #{'@accent_color'};
            }
            color: #{'@selected_fg_color'};
            outline-color: #{'alpha(@accent_color, 0.3)'};
            outline-width: rem(2px);
            outline-style: solid;
        }
    }

    &.flat {
        background: none;
        border: none;
        box-shadow: none;

        &:checked {
            background: rgba($fg-color, 0.15);
        }

        &:focus {
            @extend selection;
            outline-style: none;
        }

        headerbar & {
            border-radius: 99px;
        }
    }

    &.color,
    &.combo,
    &.lock,
    &.text-button {
        @extend .raised;

        border-radius: rem(3px);
        // Explicitly set in case containers override default color
        color: #{'@fg_color'};
        font-weight: 500;
        // Off-by-one to account for padding-box clip
        padding: rem(4px) rem(7px);

        &:dir(ltr) box image + label,
        &:dir(rtl) box label + image {
            margin-left: rem(3px);
        }

        &.link {
            padding: 0;
        }
    }

    &.image-button:not(.text-button) {
        @extend .circular;
        @extend .flat;

        .linked & {
            @extend .raised;

            border-radius: rem(3px);
        }
    }

    &:disabled {
        color: $insensitive-fg-color;
    }

    &:backdrop {
        filter: opacity($disabled-opacity);
    }

    arrow {
        min-width: rem(16px);
        min-height: rem(16px);
        -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
    }

    &.destructive-action:not(:disabled) {
        background-color: $STRAWBERRY_500;
        color: white;
        text-shadow: 0 1px 1px $STRAWBERRY_500;
        -gtk-icon-shadow: 0 1px 1px $STRAWBERRY_500;

        &,
        &:focus {
            @if $color-scheme == "light" {
                background-clip: border-box;
                border-color: $border-color;
            } @else if $color-scheme == "dark" {
                &.keyboard-activating,
                &:active,
                &:checked {
                    border-color: rgba(black, 0.7);
                }
            }
        }

        &:focus {
            outline-color: rgba($STRAWBERRY_300, 0.5);
        }
    }

    &.suggested-action:not(:disabled) {
        @extend selection;

        @if $color-scheme == "light" {
            border-color: #{'alpha(mix(black, @accent_color, 0.9), 0.5)'};

            &:backdrop {
                border-color: $border-color;
            }
        }

        &.keyboard-activating,
        &:active,
        &:checked {
            @if $color-scheme == "light" {
                border-color: #{'alpha(mix(black, @accent_color, 0.7), 0.4)'};
            } @else if $color-scheme == "dark" {
                border-color: rgba(black, 0.5);
            }
        }
    }

    &.destructive {
        @extend .destructive-action;
    }

    &.suggested {
        @extend .suggested-action;
    }

    &.color {
        colorswatch,
        overlay {
            border-radius: rem(2px);
        }
    }

    &.color,
    &.combo,
    &.image-button {
        padding: rem(4px);
    }
}

fontbutton separator.vertical {
    margin: 0 rem(6px);
}
